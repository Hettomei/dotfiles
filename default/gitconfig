[gui]
[user]
  name = Timoth√©e Gauthier
  email = 2079042+Hettomei@users.noreply.github.com
[core]
  editor = nvim
  # editor = emacs -nw
  excludesfile = ~/.gitignore_global
	pager = diff-so-fancy | less --tabs=4 -RFX
[color]
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  st = status
  s  = st
  ba = branch -vv -a
  br = branch -vv
  bd = branch -vv -d
  b  = br
  co  = checkout
  cod = checkout --detach
  com = checkout master
  c  = commit
  cm = commit -m
  ca = commit --amend
  ; not possible as git run in sub shell; si gg<TAB> in bashrc
  ; root = !cd $(git rev-parse --show-toplevel)
  dic   = diff --cached
  dicw  = diff --cached --color-words
  diffw = diff --color-words
  f = fetch --all --prune --prune-tags
  l   = log     --format='%Cred%h %Cgreen%ci %C(bold blue)%an%Creset%C(yellow)%d%Creset %s'
  ltag = log     --format='%ci   %d %s'
  ll  = log -10  --format='%Cred%h %Cgreen%ci %C(bold blue)%an%Creset%C(yellow)%d%Creset %s'
  lll = log -25 --format='%Cred%h %Cgreen%ci %C(bold blue)%an%Creset%C(yellow)%d%Creset %s'
  # Print current branch graph
  lg  = log --format='%Cred%h %Cgreen%ci %C(bold blue)%an%Creset%C(yellow)%d%Creset %s' --graph
  # Print all branch all graph
  lall = log --graph --decorate --oneline --all
  rom = rebase origin/master
  riom = rebase -i origin/master
  riod = rebase -i origin/develop
  whatrebase = log origin/master..HEAD --format='%Cred%h %Cgreen%ci %C(bold blue)%an%Creset%C(yellow)%d%Creset %s'
  # git ask to stop using whatchanged because it does not include merge. Everything can be done with log
  # More on this command : log -p --follow :
  # be carefull, sometimes it can be misleading and show file as deleted
  # example :
  # take containers/SearchPage.js with various commit
  # has been renamed to pages/CaseList/CaseList.js again with others commit :
  # git log -p --follow containers/SearchPage.js
  # will show containers/SearchPage.js has been DELETED and THEN (chronologically speaking) updated
  # This is because git has not a real file rename history. It has a whole tree with change
  # every time we git log, git 'compute' an history
  # Also, with merge, git has to show multiple commit at once, but it is not possible in a terminal
  # come back to SearchPage :
  # What to do :
  # take the commit number where it has been deleted
  # then
  # git show --stat $commitNumber
  # Then you will see containers/SearchPage.js => pages/CaseList/CaseList.js
  # then you can again do git log -p --follow -- pages/CaseList/CaseList.js
  # to see all commit (including all previous commit of containers/SearchPage
  wc = log -p --follow
  wcw = log -p --follow --color-words
  ap = add -p
  # you can do this if you didn't push. commit is lost but all the changes return to "stagged for commit"
  undo-soft = reset --soft HEAD^
  rh = reset HEAD
  rhall = !git reset HEAD . && git status
  resetoriginmaster = "! git l -1 && echo "" && git reset --hard origin/master && echo "" && git l -1"
  # edit config : open this file :)
  ec = config --global -e
  prev = checkout HEAD^
  dpull = svn rebase
  dpush = svn dcommit
  # to do a git pull AND a submodule update.
  # Needed to remove the submodule in git status
  # seen at https://gist.github.com/gitaarik/8735255
  submoduleupdate = submodule update --init --recursive
  # from https://thoughtbot.com/blog/dumpster-diving-through-dotfiles-git-branches
  branches = for-each-ref --sort=-committerdate --format=\"%(color:red)%(objectname:short) %(color:green)%(committerdate:iso8601) %(color:cyan)%(authoremail) %(color:white)%(refname:short) %(color:reset)%(contents:subject) \" refs/remotes
[push]
  default = simple
[merge]
  tool = vimdiff
  ; conflictstyle = diff3
[difftool]
  prompt = false
[status]
  showUntrackedFiles = all
[credential]
  helper = store
[pull]
  rebase = false
[interactive]
	diffFilter = diff-so-fancy --patch
[init]
	defaultBranch = master
